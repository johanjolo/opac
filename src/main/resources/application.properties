#spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
#spring.datasource.username=sa
#spring.datasource.password=sa

#spring.datasource.url=jdbc:h2:file:./financialplan_db
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=

# user = financialplanner 
#cockroach pass = VD8CIrgbRcAvhKWzrULtoA

#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#spring.h2.console.enabled=true

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=none

# ============================================ postgres
#spring.datasource.url=jdbc:postgresql://free-tier5.gcp-europe-west1.cockroachlabs.cloud:26257/defaultdb?options=--cluster%3Dvilla-sphinx-4517
spring.datasource.url=jdbc:postgresql://free-tier5.gcp-europe-west1.cockroachlabs.cloud:26257/opac?options=--cluster%3Dvilla-sphinx-4517
spring.datasource.username=financialplanner
spring.datasource.password=VD8CIrgbRcAvhKWzrULtoA

spring.datasource.driverClassName=org.postgresql.Driver


# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
# spring.jpa.database-platform=org.hibernate.dialect.postgresql.PostgreSQL95Dialect

# The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.postgresql.PostgreSQL95Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
spring.jpa.generate-ddl = true

# spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true